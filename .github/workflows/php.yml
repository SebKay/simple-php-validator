name: PHP

on: [pull_request]

jobs:
  dependencies:
    name: Install Dependencies
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Get Composer dependencies
        id: get-vendor-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-vendor-dev-${{ hashFiles('**/composer.lock') }}

      - name: Setup PHP
        if: steps.get-vendor-cache.outputs.cache-hit != 'true'
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.0

      - name: Install Composer dependencies
        if: steps.get-vendor-cache.outputs.cache-hit != 'true'
        run: composer build

  lint:
    name: Lint
    needs: [dependencies]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Get Composer dependencies
        id: get-vendor-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-vendor-dev-${{ hashFiles('**/composer.lock') }}

      - name: Check for dependencies
        if: steps.get-vendor-cache.outputs.cache-hit != 'true'
        run: |
          echo "No dependencies were found."
          exit 1

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.0

      - name: Lint against Laravel code style
        run: composer lint

  test:
    name: Test
    needs: [lint, dependencies]
    runs-on: ubuntu-latest
    env:
      APP_ENV: testing
      DB_CONNECTION: sqlite
      DB_DATABASE: ":memory:"

    steps:
      - uses: actions/checkout@v3

      - name: Get Composer dependencies
        id: get-vendor-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-vendor-dev-${{ hashFiles('**/composer.lock') }}

      - name: Check for dependencies
        if: steps.get-vendor-cache.outputs.cache-hit != 'true'
        run: |
          echo "No dependencies were found."
          exit 1

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.0

      - name: Run tests
        run: composer test:coverage
